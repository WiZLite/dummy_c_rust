fn printi32(n: i32): void {
    (printf "%d\n", n)
}

struct Vec<T> {
  size: usize,
  capacity: usize,
  buf: *T
}

fn vec<T>(): Vec<T> {
  let initial_capacity: usize = 4
  Vec<T> {
    size: 0,
    capacity: initial_capacity,
    buf: (generic_malloc<T> initial_capacity)
  }
}

fn generic_malloc<T>(size: usize) : *T {
  let size = (* size (sizeof T))
  let result: *T = (malloc size)
  result
}

fn main(): i32 {
  (vec<i32>)
  return 0
}
